<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbMain.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        0QAAAABJRU5ErkJggg==
</value>
  </data>
</root>